name: Build

on:
  push:
      branches:
        - main

  pull_request:
      branches:
        - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ format('{0}-{1}', join(fromJSON('["base","dind","2204"]'), '-'), matrix.arch) }}
    strategy:
      matrix:
        # FIXME: pending armv7l support
        #arch: [ amd64, arm64, arm ]
        arch: [ amd64, arm64 ]
        build-type: [release]
      fail-fast: false
    permissions:
      contents: read
      pull-requests: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Display Go version
      run: |
        go version

    - name: Install vaccel
      run: |
       ARCHITECTURE=${{ matrix.arch }}
       # Map x86_64 to amd64 and aarch64 to arm64
       if [[ "$ARCHITECTURE" == "amd64" ]]; then
            ARCHITECTURE="x86_64"
       elif [[ "$ARCHITECTURE" == "arm64" ]]; then
            ARCHITECTURE="aarch64"
       elif [[ "$ARCHITECTURE" == "arm" ]]; then
            ARCHITECTURE="armv7l"
            EXTRA_ARCH="hf"
       fi

       # Output the mapped architecture
       echo "Mapped architecture: $ARCHITECTURE"
       echo "ARCHITECTURE=$ARCHITECTURE" >> $GITHUB_ENV

       wget https://s3.nbfc.io/nbfc-assets/github/vaccel/rev/main/$ARCHITECTURE/release/vaccel_latest_${{ matrix.arch }}${EXTRA_ARCH}.deb && sudo dpkg -i vaccel_latest_${{ matrix.arch }}${EXTRA_ARCH}.deb && rm vaccel_latest_${{ matrix.arch }}${EXTRA_ARCH}.deb && sudo ldconfig
       
    - name: Build binaries
      run: |
       make

    - name: Test binaries
      env:
       VACCEL_LOG_LEVEL: 4
       VACCEL_PLUGINS: /usr/lib/${{ env.ARCHITECTURE }}-linux-gnu/libvaccel-noop.so
       LD_LIBRARY_PATH: /usr/lib/${{ env.ARCHITECTURE }}-linux-gnu
      run: |
       ./bin/noop
       ./bin/classify /usr/share/vaccel/images/example.jpg
       ./bin/exec /usr/lib/${ARCHITECTURE}-linux-gnu/libmytestlib.so 10

